package com.eshore.datasupport.task.dao;

import java.util.List;
import java.util.Map;

import com.eshore.datasupport.task.pojo.Gzpz;
import com.eshore.datasupport.task.vo.RjobVo;
import com.eshore.datasupport.task.vo.YsjbVo;
import com.eshore.khala.common.model.PageConfig;
import com.eshore.khala.core.data.api.dao.IBaseDao;

/**
*generated by tools 
*
*/
public interface IGzpzDao extends IBaseDao<Gzpz> {
	/**
	 * 通过规则类型查询规则配置表
	 * @param pc  分页
	 * @param lx  规则类型(0 采集 1 处理 2挖掘)
	 * @return
	 */
	//List<Gzpz>         getRulelistdata(PageConfig pc,int lx);
	/**
	 * 通过规则名称模糊查询
	 * @param pc 分页
	 * @param gzm 规则名称
	 * @param lx  规则类型
	 * @return
	 */	
	List<Gzpz>         getRulelistdataBygzmc(PageConfig pc,String gzm,int lx);
	/**
	 * 关联数据源表和元数据表得到数据源表名
	 * @param ids 数据源ID	
	 * @param bid 元数据ID
	 * @return
	 */
	List<YsjbVo>  getsjyName(String ids,String bid);
	/**
	 * 查询数据源表
	 * @return
	 */
	//List<Map<String, Object>>  getDatainpage();
	/**
	 * 根据数据源ID查询元数据表
	 * @param ids  数据源ID
	 * @return
	 */
	//List<Map<String, Object>> getSrbiao(String ids);
	/**
	 * 根据规则名称和类型查询规则配置表
	 * @param names  规则名称
	 * @param lx     规则类型
	 * @return 
	 */
	List<Gzpz> getgzlistBy(String names,Integer lx);
	/**
	 * 查询采集的job
	 * @param pc
	 * @param jobtxt 规则名称
	 * @return
	 */
	List<RjobVo>         getJoblist(PageConfig pc,String jobtxt,String strsql);
	/**
	 * 查询处理的job
	 * @param pc
	 * @param jobtxt 规则名称
	 * @return
	 */
	List<RjobVo>         getclJoblist(PageConfig pc,String jobtxt,String strsql);
	/**
	 * 通过ID查询规则配置表
	 * @param idu 规则ID
	 * @return
	 */
	//List<Map<String, Object>> getRuledataByid(String idu);
	/**
	 * 查询调度的job
	 * @param pc
	 * @param jobtxt 规则名称
	 * @return
	 */
	List<RjobVo>         getddJoblist(PageConfig pc,String jobtxt,String strsql);
	
	/**
	 * 根据传入参数,查询gzpz
	 * @param params 参数map对象
	 * @param pc 分页对象
	 * @return gzpz list集合
	 */
	public List<Map<String, Object>> findGzpzList(Map<String,Object>params, PageConfig pc);
	
	/**
	 * 根据传入参树,查询rwb
	 * @param params 参数map对象
	 * @param pc pc 分页对象
	 * @return rwb list集合
	 */
	public List<Map<String, Object>> findRwbList(Map<String,Object>params, PageConfig pc);
	
	/**
	 *  根据传入参树,查询rwb
	 * @param params
	 * @param pc
	 * @return
	 */
	List<Map<String, Object>> findRwbListForGj(Map<String, Object> params, PageConfig pc);
	
}
